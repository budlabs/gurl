#!/usr/bin/env bash

___printversion(){
  
cat << 'EOB' >&2
gurl - version: 2020.03.26.6
updated: 2020-03-26 by budRich
EOB
}


# environment variables
: "${XDG_CONFIG_HOME:=$HOME/.config}"
: "${MATCHERS_DIR:=$XDG_CONFIG_HOME/gurl}"


main(){

  dir=${__o[matchers-dir]:-$MATCHERS_DIR}
  
  [[ -z $dir ]] && ERX "MATCHERS_DIR not specified"
  [[ -d $dir ]] || createconf "$dir"

  [[ -z ${url:=$1} ]] && ERX no url

  printf '%s\n' "$@" > "$dir/.last"

  files=("$dir"/*/match)
  [[ -f $dir/match ]] && files+=("$dir/match")

  ((${#files[@]} > 0)) && trg=$(awk -v URL="$url" '
    /^[^#]/ {
      if (match(URL,gensub(/^[^:]+:\s+/,"",1,$0))) {
        dir = gensub(/[^/]+$/,"",1,FILENAME)
        print gensub(/^([^:]+).+/,dir "\\1",1,$1)
        exit
      }
    }
  ' "${files[@]}")

  [[ -f ${trg:=$dir/default} ]] && {
    export PATH=${tdir:=${trg%/*}}:$dir/_lib:$PATH
    cd "$tdir" || exit 1
    :
  } || trg=${trg##*/}

  command -v "$trg" >/dev/null && exec "$trg" "$@"
  ERX "$trg is not executable"
}

___printhelp(){
  
cat << 'EOB' >&2
gurl - ganoo slash URL handler and plumber framework


SYNOPSIS
--------
gurl [--matchers-dir|-d DIR] URL [ARG...]
gurl --help|-h
gurl --version|-v

OPTIONS
-------

--matchers-dir|-d DIR  
Override the environment variable MATCHERS_DIR
with DIR.


--help|-h  
Show help and exit.


--version|-v  
Show version and exit.
EOB
}


createconf() {
local trgdir="$1"
declare -a aconfdirs

aconfdirs=(
"$trgdir/github"
"$trgdir/github/assets"
"$trgdir/_lib"
"$trgdir/youtube"
)

mkdir -p "$1" "${aconfdirs[@]}"

cat << 'EOCONF' > "$trgdir/github/assets/vars"
clone_dir=$HOME/git/clones
EOCONF

cat << 'EOCONF' > "$trgdir/github/match"
ghfile.sh: (http[s]?://)?.*github[.]com.*/(blob|raw)/.+
repo.sh:   (http[s]?://)?.*github[.]com/[^/]+/[^/]
EOCONF

cat << 'EOCONF' > "$trgdir/github/repo.sh"

source assets/vars

[[ $1 =~ (http[s]?://)?.*github[.]com/([^/]+/[^/]+) ]] \
    && repo=${BASH_REMATCH[2]}

prompt="clone $repo to $clone_dir/${repo#*/}? "

[[ $(ynp.sh "$prompt") = yes ]] && message.sh "you answered yes"
EOCONF

chmod +x "$trgdir/github/repo.sh"
cat << 'EOCONF' > "$trgdir/github/ghfile.sh"
message.sh "$1 is a github file, download link in clipboard"

cb.sh "${1/blob/raw}"
EOCONF

chmod +x "$trgdir/github/ghfile.sh"
cat << 'EOCONF' > "$trgdir/default"
echo no pattern matching: "$1"
EOCONF

chmod +x "$trgdir/default"
cat << 'EOCONF' > "$trgdir/_lib/ynp.sh"
echo -e "yes\nno" | dmenu -p "$1"
EOCONF

chmod +x "$trgdir/_lib/ynp.sh"
cat << 'EOCONF' > "$trgdir/_lib/message.sh"
notify-send "$*"
EOCONF

chmod +x "$trgdir/_lib/message.sh"
cat << 'EOCONF' > "$trgdir/_lib/cb.sh"
echo -n "$1" | xclip -sel c
EOCONF

chmod +x "$trgdir/_lib/cb.sh"
cat << 'EOCONF' > "$trgdir/youtube/youtube.sh"
message.sh "a youtube link!"
EOCONF

chmod +x "$trgdir/youtube/youtube.sh"
cat << 'EOCONF' > "$trgdir/match"
youtube/youtube.sh: (http[s]?://)?.*youtube[.]com.*
notify-send: (http[s]?://)?.*google[.]com.*
EOCONF

}
set -E
trap '[ "$?" -ne 77 ] || exit 77' ERR

ERM(){

  local mode OPTIND

  getopts xr mode
  case "$mode" in
    x ) urg=critical ; prefix='[ERROR]: '   ;;
    r ) urg=low      ; prefix='[WARNING]: ' ;;
    * ) urg=normal   ; mode=m ;;
  esac
  shift $((OPTIND-1))

  msg="${prefix}$*"

  if [[ -t 2 ]]; then
    echo "$msg" >&2
  else
    notify-send -u "$urg" "$msg"
  fi

  [[ $mode = x ]] && exit 77
}

ERX() { ERM -x "$*" ;}
ERR() { ERM -r "$*" ;}
ERH(){
  {
    ___printhelp 
    [[ -n "$*" ]] && printf '\n%s\n' "$*"
  } >&2 
  exit 77
}

declare -A __o
options="$(
  getopt --name "[ERROR]:gurl" \
    --options "d:hv" \
    --longoptions "matchers-dir:,help,version," \
    -- "$@" || exit 77
)"

eval set -- "$options"
unset options

while true; do
  case "$1" in
    --matchers-dir | -d ) __o[matchers-dir]="${2:-}" ; shift ;;
    --help       | -h ) ___printhelp && exit ;;
    --version    | -v ) ___printversion && exit ;;
    -- ) shift ; break ;;
    *  ) break ;;
  esac
  shift
done

[[ ${__lastarg:="${!#:-}"} =~ ^--$|${0}$ ]] \
  && __lastarg="" 


main "${@:-}"


